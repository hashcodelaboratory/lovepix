import ResponsiveAppBar from 'app-bar/responsive-app-bar'
import { database } from 'common/firebase/config'
import { Collections } from 'common/firebase/enums'
import { doc, getDoc } from 'firebase/firestore'
import { GetStaticPaths, GetStaticProps, NextPage } from 'next'
import { serverSideTranslations } from 'next-i18next/serverSideTranslations'
import Head from 'next/head'
import { useRouter } from 'next/router'
import React from 'react'
import ProductDetail from 'screens-content/e-shop/components/product-detail/product-detail'
import FooterLayout from 'screens-content/footer/footer'

import styles from '../../styles/Home.module.css'

const ProductID: NextPage = () => {
  const router = useRouter()
  const id = router.query.productID as string[]

  console.log(id[0])

  const getData = async () => {
    const snap = await getDoc(doc(database, Collections.PRODUCTS, id[0]))
    console.log(snap.data())

    return snap.data()
  }

  console.log('âœ…', getData())

  return (
    <div className={styles.container}>
      <Head>
        <title>Product detail</title>
        <meta name='Eshop' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <header>
        <ResponsiveAppBar />
      </header>
      <main className={styles.main}>
        <ProductDetail />
      </main>
      <footer>
        <FooterLayout />
      </footer>
    </div>
  )
}

export const getStaticPaths: GetStaticPaths<{
  travelIds: string
}> = async () => {
  return {
    paths: [], //indicates that no page needs be created at build time
    fallback: 'blocking', //indicates the type of fallback
  }
}

export const getStaticProps: GetStaticProps = async ({ locale }) => {
  return {
    props: {
      ...(await serverSideTranslations(locale ?? 'sk', ['common'])),
    },
  }
}

export default ProductID
