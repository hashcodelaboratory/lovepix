name: Fesicomp DockerHub Deployment on ORGANIZATION DEV environment - BACKEND
on: [push] # - only for testing
# on:
#   workflow_dispatch:

#   push:
#     branches:
#       - main

defaults:
  run:
    working-directory: ./frontend 

env:
  DOCKER_HUB_USER: ${{secrets.DOCKER_HUB_USERNAME}}
  DOCKER_HUB_PASSWORD: ${{secrets.DOCKER_HUB_PASSWORD}}
  DOCKER_TAG_WALLER_FE: ${{secrets.DOCKER_TAG_WALLER_FE}}
  NEXT_PUBLIC_SMART_EMAILING_HOST: ${{secrets.NEXT_PUBLIC_SMART_EMAILING_HOST}}
  NEXT_PUBLIC_SMART_EMAILING_TOKEN: ${{secrets.NEXT_PUBLIC_SMART_EMAILING_TOKEN}}
  NEXT_PUBLIC_SMART_EMAILING_CONTACT_LIST_ID: ${{secrets.NEXT_PUBLIC_SMART_EMAILING_CONTACT_LIST_ID}}
  NEXT_PUBLIC_SUPERFAKTURA_EMAIL: ${{secrets.NEXT_PUBLIC_SUPERFAKTURA_EMAIL}}
  NEXT_PUBLIC_SUPERFAKTURA_API_KEY: ${{secrets.NEXT_PUBLIC_SUPERFAKTURA_API_KEY}}
  NEXT_PUBLIC_SUPERFAKTURA_COMPANY_ID: ${{secrets.NEXT_PUBLIC_SUPERFAKTURA_COMPANY_ID}}
  NEXT_PUBLIC_SUPERFAKTURA_MODULE: ${{secrets.NEXT_PUBLIC_SUPERFAKTURA_MODULE}}
  NEXT_PUBLIC_STRIPE_PUBLIC_KEY: ${{secrets.NEXT_PUBLIC_STRIPE_PUBLIC_KEY}}
  NEXT_PUBLIC_STRIPE_SECRET_KEY: ${{secrets.NEXT_PUBLIC_STRIPE_SECRET_KEY}}
  NEXT_PUBLIC_NODE_MAILER_SERVICE: ${{secrets.NEXT_PUBLIC_NODE_MAILER_SERVICE}}
  NEXT_PUBLIC_NODE_MAILER_HOST: ${{secrets.NEXT_PUBLIC_NODE_MAILER_HOST}}
  NEXT_PUBLIC_NODE_MAILER_SECURE: ${{secrets.NEXT_PUBLIC_NODE_MAILER_SECURE}}
  NEXT_PUBLIC_NODE_MAILER_PORT: ${{secrets.NEXT_PUBLIC_NODE_MAILER_PORT}}
  NEXT_PUBLIC_NODE_MAILER_USER: ${{secrets.NEXT_PUBLIC_NODE_MAILER_USER}}
  NEXT_PUBLIC_NODE_MAILER_PASSWORD: ${{secrets.NEXT_PUBLIC_NODE_MAILER_PASSWORD}}
  
jobs:
  push-lovepix-image-on-dockerhub:  
    runs-on: ubuntu-latest 
    environment: Test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        #env:
      - name: Build docker LOVEPIX frontend image
        run: |
          docker-compose up -d
      - name: Docker images 
        run: docker images
      - name: Tag the image of LOVEPIX-fe
        run: docker tag waller-fe:latest $DOCKER_HUB_USER/$DOCKER_TAG_WALLER_FE
      - name: Docker images 
        run: docker images
      - name: DOCKER LOGIN
        run: | 
          docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD  
      - name: Docker Push of WALLER-fe image
        run: docker push $DOCKER_HUB_USER/$DOCKER_TAG_WALLER_FE

  deploy:
    name: Deploy on EC2
    needs: push-lovepix-image-on-dockerhub
    runs-on: ubuntu-latest
    steps:
      - name: deploying on ec2 and rebuild docker-compose with nginX
        uses: appleboy/ssh-action@v0.1.7
        with:
          envs: DOCKER_HUB_USER, DOCKER_HUB_PASSWORD, DOCKER_TAG_WALLER_FE
          host: ${{ secrets.NEW_ORG_AWS_TEST_HOST }}
          username: ec2-user
          key: ${{ secrets.NEW_ORG_AWS_TEST_PEM }}
          port: 22
          script: |
            cd docker-nginx-letsencrypt-https-ec2
            cd docker
            docker images
            touch test.txt
            docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD
            containerId=$( docker container ls -a | grep server-frontend | awk '{ print $1 }' )
            docker stop $containerId
            docker rm $containerId
            docker rmi $DOCKER_HUB_USER/$DOCKER_TAG_ENV
            docker pull $DOCKER_HUB_USER/$DOCKER_TAG_ENV
            docker pull $DOCKER_HUB_USER/$DOCKER_TAG_MONGO_EXPRESS
            docker pull $DOCKER_HUB_USER/$DOCKER_TAG_MONGO
            docker-compose up -d --no-deps --build nginx
            docker-compose up -d --no-deps --build server-frontend